name: Create Firmware

#on:
#  push:
#    branches:
#      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Installing UI dependencies
      run: |
        npm config set "@fortawesome:registry" https://npm.fontawesome.com/
        npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.NPM_FONTAWESOME_KEY }}
        cd ui
        npm install
        npm run build
        cd ..

    - name: Installing platformio
      run: pip3 install -U platformio

    - name: Building a firmware for ESP32
      run: |
        pio run -e wemos_d1_mini32
        pio run -e wemos_d1_mini32 -t buildfs
# produces ${{ github.workspace }}/.pio/build/wemos_d1_mini32/firmware.bin
# produces ${{ github.workspace }}/.pio/build/wemos_d1_mini32/littlefs.bin
# produces ${{ github.workspace }}/.pio/build/wemos_d1_mini32/partitions.bin
# produces ~/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_80m.bin
# produces ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin

    - name: 'Upload firmware Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: firmware.bin
        path: |
          ${{ github.workspace }}/.pio/build/wemos_d1_mini32/firmware.bin

    - name: 'Upload littlefs Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: littlefs.bin
        path: |
          ${{ github.workspace }}/.pio/build/wemos_d1_mini32/littlefs.bin

    - name: 'Upload partitions Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: partitions.bin
        path: |
          ${{ github.workspace }}/.pio/build/wemos_d1_mini32/partitions.bin

    - name: 'Upload partitions Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: bootloader_dio_80m.bin
        path: |
          ~/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_80m.bin

    - name: 'Upload partitions Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: boot_app0.bin
        path: |
          ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin

    - name: Upload to S3
      run: |
        echo "host_base = s3.womolin.de" > ~/.s3cfg
        echo "host_bucket = s3.womolin.de" >> ~/.s3cfg
        echo "bucket_location = de-fra" >> ~/.s3cfg
        echo "use_https = True" >> ~/.s3cfg
        echo "access_key = ${{ secrets.S3_ACCESS_KEY }}" >> ~/.s3cfg
        echo "secret_key = ${{ secrets.S3_SECRET_KEY }}" >> ~/.s3cfg
        echo "signature_v2 = False" >> ~/.s3cfg
        sudo apt -y update
        sudo apt -y install s3cmd
        s3cmd put ${{ github.workspace }}/current-version.json s3://webinstaller/gaslevel-latest/
        s3cmd put ${{ github.workspace }}/.pio/build/wemos_d1_mini32/firmware.bin s3://webinstaller/gaslevel-latest/
        s3cmd put ${{ github.workspace }}/.pio/build/wemos_d1_mini32/littlefs.bin s3://webinstaller/gaslevel-latest/
        s3cmd put ${{ github.workspace }}/.pio/build/wemos_d1_mini32/partitions.bin s3://webinstaller/gaslevel-latest/
        s3cmd put ~/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_80m.bin s3://webinstaller/gaslevel-latest/
        s3cmd put ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin s3://webinstaller/gaslevel-latest/
